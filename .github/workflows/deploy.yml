name: Java CI with Gradle
on:
  push:
    branches: [ "main" ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        env:
          APP_ENCRYPTION_PASSWORD : ${{secrets.APP_ENCRYPTION_PASSWORD}}
        run: ./gradlew build


      - name: Build Docker image
        run: docker build --build-arg SPRING_PROFILES_ACTIVE=prod --build-arg APP_ENCRYPTION_PASSWORD=${{secrets.APP_ENCRYPTION_PASSWORD}} -t configserver .

      - name: Save Docker image
        run: docker save configserver | gzip > configserver.tar.gz

      - name: Upload Docker image to EC2
        uses: appleboy/scp-action@v0.1.7

        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          source: "configserver.tar.gz"
          target: "/home/ubuntu"

      - name: Deploy Docker image on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            docker load < configserver.tar.gz
            docker stop configserver || true
            docker rm  configserver || true
            docker run -d -p 8071:8071 --name configserver 
            docker run -d -p 8071:8071 --name configserver \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e APP_ENCRYPTION_PASSWORD=${{secrets.APP_ENCRYPTION_PASSWORD}} \
            configserver
            docker image prune -f --filter "dangling=true"
